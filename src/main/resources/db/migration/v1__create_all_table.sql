CREATE TABLE tm_reset_token_passwords
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    created_by INTEGER,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    updated_by INTEGER,
    token      TEXT                                      NOT NULL,
    user_id    INTEGER                                   NOT NULL,
    used       BOOLEAN                     DEFAULT FALSE NOT NULL,
    expiry_at  TIMESTAMP WITHOUT TIME ZONE               NOT NULL,
    CONSTRAINT pk_tm_reset_token_passwords PRIMARY KEY (id)
);

ALTER TABLE tm_reset_token_passwords
    ADD CONSTRAINT FK_TM_RESET_TOKEN_PASSWORDS_ON_USER FOREIGN KEY (user_id) REFERENCES tm_accounts (user_id);

CREATE TABLE tm_refresh_tokens
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    created_by INTEGER,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    updated_by INTEGER,
    token      TEXT                                      NOT NULL,
    user_id    INTEGER                                   NOT NULL,
    expiry_at  TIMESTAMP WITHOUT TIME ZONE               NOT NULL,
    CONSTRAINT pk_tm_refresh_tokens PRIMARY KEY (id)
);

ALTER TABLE tm_refresh_tokens
    ADD CONSTRAINT FK_TM_REFRESH_TOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES tm_accounts (user_id);

CREATE TABLE tr_balances
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    created_by INTEGER,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    updated_by INTEGER                                   NOT NULL,
    balance    DOUBLE PRECISION                          NOT NULL,
    is_active  BOOLEAN                                   NOT NULL,
    pin        VARCHAR(255)                              NOT NULL,
    CONSTRAINT pk_tr_balances PRIMARY KEY (id)
);

CREATE TABLE tm_roles
(
    role_id    INTEGER GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    created_by INTEGER,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    updated_by INTEGER                                   NOT NULL,
    role_name  VARCHAR(255)                              NOT NULL,
    CONSTRAINT pk_tm_roles PRIMARY KEY (role_id)
);

ALTER TABLE tm_roles
    ADD CONSTRAINT uc_tm_roles_role_name UNIQUE (role_name);

CREATE TABLE tm_accounts
(
    user_id    INTEGER GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    created_by INTEGER,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    updated_by INTEGER                                   NOT NULL,
    email      VARCHAR(255)                              NOT NULL,
    password   VARCHAR(255)                              NOT NULL,
    full_name  VARCHAR(255)                              NOT NULL,
    photo      VARCHAR(255),
    role_id    INTEGER                                   NOT NULL,
    CONSTRAINT pk_tm_accounts PRIMARY KEY (user_id)
);

ALTER TABLE tm_accounts
    ADD CONSTRAINT uc_tm_accounts_balance UNIQUE (balance_id);

ALTER TABLE tm_accounts
    ADD CONSTRAINT uc_tm_accounts_email UNIQUE (email);

ALTER TABLE tm_accounts
    ADD CONSTRAINT FK_TM_ACCOUNTS_ON_ROLE FOREIGN KEY (role_id) REFERENCES tm_roles (role_id);